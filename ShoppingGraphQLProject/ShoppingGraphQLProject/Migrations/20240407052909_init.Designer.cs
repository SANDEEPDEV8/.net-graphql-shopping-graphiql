// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShoppingGraphQL.Data;

#nullable disable

namespace ShoppingGraphQL.Migrations
{
    [DbContext(typeof(GraphQLDbContext))]
    [Migration("20240407052909_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShoppingGraphQL.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Harper Lee",
                            CategoryId = 1,
                            ImageUrl = "https://example.com/books/to-kill-a-mockingbird.jpg",
                            Price = 10.99,
                            Title = "To Kill a Mockingbird"
                        },
                        new
                        {
                            Id = 2,
                            Author = "F. Scott Fitzgerald",
                            CategoryId = 1,
                            ImageUrl = "https://example.com/books/the-great-gatsby.jpg",
                            Price = 12.5,
                            Title = "The Great Gatsby"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Yuval Noah Harari",
                            CategoryId = 2,
                            ImageUrl = "https://example.com/books/sapiens.jpg",
                            Price = 15.949999999999999,
                            Title = "Sapiens: A Brief History of Humankind"
                        });
                });

            modelBuilder.Entity("ShoppingGraphQL.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "https://example.com/categories/fiction.jpg",
                            Name = "Fiction"
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "https://example.com/categories/non-fiction.jpg",
                            Name = "Non-Fiction"
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "https://example.com/categories/science-fiction.jpg",
                            Name = "Science Fiction"
                        });
                });

            modelBuilder.Entity("ShoppingGraphQL.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SpecialRequest")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerName = "Alice Johnson",
                            Email = "alicejohnson@example.com",
                            OrderDate = new DateTime(2024, 4, 14, 0, 29, 9, 142, DateTimeKind.Local).AddTicks(7289),
                            PhoneNumber = "555-123-4567",
                            Quantity = 2,
                            SpecialRequest = "Gift wrapping required."
                        },
                        new
                        {
                            Id = 2,
                            CustomerName = "Bob Smith",
                            Email = "bobsmith@example.com",
                            OrderDate = new DateTime(2024, 4, 17, 0, 29, 9, 142, DateTimeKind.Local).AddTicks(7344),
                            PhoneNumber = "555-987-6543",
                            Quantity = 1,
                            SpecialRequest = "Express delivery needed."
                        },
                        new
                        {
                            Id = 3,
                            CustomerName = "Eve Brown",
                            Email = "evebrown@example.com",
                            OrderDate = new DateTime(2024, 4, 21, 0, 29, 9, 142, DateTimeKind.Local).AddTicks(7347),
                            PhoneNumber = "555-789-0123",
                            Quantity = 3,
                            SpecialRequest = "Include a personal message."
                        });
                });

            modelBuilder.Entity("ShoppingGraphQL.Models.Book", b =>
                {
                    b.HasOne("ShoppingGraphQL.Models.Category", null)
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShoppingGraphQL.Models.Category", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
